#Signature file v4.1
#Version 

CLSS public com.oracle.truffle.api.ArgumentsTest
cons public init()
meth public void test()
supr java.lang.Object
hcls TestArgumentNode,TestRootNode

CLSS public abstract interface com.oracle.truffle.api.Assumption
meth public abstract boolean isValid()
meth public abstract java.lang.String getName()
meth public abstract void check() throws com.oracle.truffle.api.nodes.InvalidAssumptionException
meth public abstract void invalidate()

CLSS public com.oracle.truffle.api.AssumptionInvalidationTest
cons public init()
meth public void test() throws java.lang.InterruptedException
supr java.lang.Object
hcls CountingNode,TestRootNode,ValueNode

CLSS public abstract interface com.oracle.truffle.api.CallTarget
meth public abstract !varargs java.lang.Object call(java.lang.Object[])

CLSS public com.oracle.truffle.api.CallTest
cons public init()
meth public void test()
supr java.lang.Object
hcls ConstantRootNode,DualCallNode

CLSS public com.oracle.truffle.api.ChildNodeTest
cons public init()
meth public void test()
supr java.lang.Object
hcls TestChildNode,TestRootNode

CLSS public com.oracle.truffle.api.ChildrenNodesTest
cons public init()
meth public void test()
meth public void testMultipleChildrenFields()
supr java.lang.Object
hcls TestChildNode,TestRoot2Node,TestRootNode

CLSS public final com.oracle.truffle.api.CompilerAsserts
meth public static <%0 extends java.lang.Object> void compilationConstant(java.lang.Object)
meth public static <%0 extends java.lang.Object> void partialEvaluationConstant(java.lang.Object)
meth public static void neverPartOfCompilation()
meth public static void neverPartOfCompilation(java.lang.String)
supr java.lang.Object

CLSS public final com.oracle.truffle.api.CompilerDirectives
cons public init()
 anno 0 java.lang.Deprecated()
fld public final static double FASTPATH_PROBABILITY = 0.9999
fld public final static double LIKELY_PROBABILITY = 0.75
fld public final static double SLOWPATH_PROBABILITY = 1.0E-4
fld public final static double UNLIKELY_PROBABILITY = 0.25
innr public abstract interface static !annotation CompilationFinal
innr public abstract interface static !annotation TruffleBoundary
innr public abstract interface static !annotation ValueType
meth public static <%0 extends java.lang.Object> {%%0} interpreterOnly(java.util.concurrent.Callable<{%%0}>) throws java.lang.Exception
meth public static boolean inCompiledCode()
meth public static boolean inInterpreter()
meth public static boolean injectBranchProbability(double,boolean)
meth public static boolean isCompilationConstant(java.lang.Object)
meth public static boolean isPartialEvaluationConstant(java.lang.Object)
meth public static void bailout(java.lang.String)
meth public static void ensureVirtualized(java.lang.Object)
meth public static void ensureVirtualizedHere(java.lang.Object)
meth public static void interpreterOnly(java.lang.Runnable)
meth public static void materialize(java.lang.Object)
meth public static void transferToInterpreter()
meth public static void transferToInterpreterAndInvalidate()
supr java.lang.Object

CLSS public abstract interface static !annotation com.oracle.truffle.api.CompilerDirectives$CompilationFinal
 outer com.oracle.truffle.api.CompilerDirectives
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[FIELD])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault int dimensions()

CLSS public abstract interface static !annotation com.oracle.truffle.api.CompilerDirectives$TruffleBoundary
 outer com.oracle.truffle.api.CompilerDirectives
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD, CONSTRUCTOR])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault boolean throwsControlFlowException()

CLSS public abstract interface static !annotation com.oracle.truffle.api.CompilerDirectives$ValueType
 outer com.oracle.truffle.api.CompilerDirectives
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation

CLSS public abstract interface com.oracle.truffle.api.CompilerOptions
meth public abstract boolean supportsOption(java.lang.String)
meth public abstract void setOption(java.lang.String,java.lang.Object)

CLSS public com.oracle.truffle.api.ExactMath
cons public init()
 anno 0 java.lang.Deprecated()
meth public static int addExact(int,int)
meth public static int multiplyExact(int,int)
meth public static int multiplyHigh(int,int)
meth public static int multiplyHighUnsigned(int,int)
meth public static int subtractExact(int,int)
meth public static long addExact(long,long)
meth public static long multiplyExact(long,long)
meth public static long multiplyHigh(long,long)
meth public static long multiplyHighUnsigned(long,long)
meth public static long subtractExact(long,long)
supr java.lang.Object

CLSS public abstract com.oracle.truffle.api.ExecutionContext
cons protected init()
meth public com.oracle.truffle.api.CompilerOptions getCompilerOptions()
supr java.lang.Object

CLSS public com.oracle.truffle.api.FinalFieldTest
cons public init()
meth public void test()
supr java.lang.Object
hcls TestChildNode,TestRootNode

CLSS public com.oracle.truffle.api.FrameDescriptorTest
cons public init()
meth public void copy() throws java.lang.Exception
meth public void localsDefaultValue() throws java.lang.Exception
meth public void notInFrameAssumption()
meth public void nullDefaultValue()
meth public void shallowCopy()
meth public void version()
supr java.lang.Object
hfds s1,s2,s3

CLSS public com.oracle.truffle.api.FrameSlotTypeSpecializationTest
cons public init()
meth public void test()
supr java.lang.Object
hcls FrameSlotNode,IntAssignLocal,IntReadLocal,ObjectAssignLocal,ObjectReadLocal,StringTestChildNode,TestChildNode,TestRootNode

CLSS public com.oracle.truffle.api.FrameTest
cons public init()
meth public void framesCanBeMaterialized()
meth public void test()
supr java.lang.Object
hcls AssignLocal,FrameSlotNode,ReadLocal,TestChildNode,TestRootNode

CLSS public com.oracle.truffle.api.InterfaceChildFieldTest
cons public init()
meth public void testChild()
meth public void testChildren()
supr java.lang.Object
hcls TestChildInterface,TestChildNode,TestChildrenNode,TestLeaf2Node,TestLeafNode,TestRootNode

CLSS public abstract interface com.oracle.truffle.api.LoopCountReceiver
 anno 0 java.lang.Deprecated()
meth public abstract void reportLoopCount(int)

CLSS public com.oracle.truffle.api.LoopNodeTest
cons public init()
meth public void testBreak()
meth public void testContinue()
meth public void testHundredInvocations()
meth public void testLoopCountReportingInCallTarget()
meth public void testLoopCountReportingWithNode()
meth public void testNoInvocations()
supr java.lang.Object
hcls BodyNode,BreakException,ContinueException,GuestLanguageNode,IterateNode,TestWhileNode

CLSS public com.oracle.truffle.api.OptimizationFailedException
cons public init(java.lang.Throwable,com.oracle.truffle.api.RootCallTarget)
meth public com.oracle.truffle.api.RootCallTarget getCallTarget()
supr java.lang.RuntimeException
hfds callTarget,serialVersionUID

CLSS public abstract interface com.oracle.truffle.api.ReplaceObserver
meth public abstract boolean nodeReplaced(com.oracle.truffle.api.nodes.Node,com.oracle.truffle.api.nodes.Node,java.lang.CharSequence)

CLSS public com.oracle.truffle.api.ReplaceTest
cons public init()
meth public void test()
supr java.lang.Object
hcls ResolvedNode,TestRootNode,UnresolvedNode,ValueNode

CLSS public com.oracle.truffle.api.ReturnTypeSpecializationTest
cons public init()
meth public void test()
supr java.lang.Object
hcls FrameSlotNode,IntAssignLocal,IntReadLocal,ObjectAssignLocal,ObjectReadLocal,StringTestChildNode,TestChildNode,TestRootNode

CLSS public abstract interface com.oracle.truffle.api.RootCallTarget
intf com.oracle.truffle.api.CallTarget
meth public abstract com.oracle.truffle.api.nodes.RootNode getRootNode()

CLSS public com.oracle.truffle.api.RootNodeTest
cons public init()
meth public void test()
supr java.lang.Object
hcls TestRootNode

CLSS public com.oracle.truffle.api.StackTraceTest
cons public init()
meth public void testAsynchronousFrameAccess() throws java.lang.InterruptedException,java.util.concurrent.ExecutionException,java.util.concurrent.TimeoutException
meth public void testCallTargetStackTrace()
meth public void testCombinedStackTrace()
meth public void testDirectStackTrace()
meth public void testFirstFrameIsCurrentFrame()
meth public void testFrameAccess()
meth public void testIndirectStackTrace()
meth public void testNoStackTrace()
meth public void testSingleStackTrace()
meth public void testStackTraversal()
supr java.lang.Object
hcls ReturnStackTraceNode,StackTrace,TestCallNode,TestCallWithCallTargetNode,TestCallWithDirectTargetNode,TestCallWithIndirectTargetNode,TestRootNode

CLSS public final com.oracle.truffle.api.TestingLanguage
fld public final static com.oracle.truffle.api.TestingLanguage INSTANCE
meth protected !varargs com.oracle.truffle.api.CallTarget parse(com.oracle.truffle.api.source.Source,com.oracle.truffle.api.nodes.Node,java.lang.String[]) throws java.io.IOException
meth protected boolean isInstrumentable(com.oracle.truffle.api.nodes.Node)
 anno 0 java.lang.Deprecated()
meth protected boolean isObjectOfLanguage(java.lang.Object)
meth protected com.oracle.truffle.api.instrument.Visualizer getVisualizer()
 anno 0 java.lang.Deprecated()
meth protected com.oracle.truffle.api.instrument.WrapperNode createWrapperNode(com.oracle.truffle.api.nodes.Node)
 anno 0 java.lang.Deprecated()
meth protected java.lang.Object createContext(com.oracle.truffle.api.TruffleLanguage$Env)
meth protected java.lang.Object evalInContext(com.oracle.truffle.api.source.Source,com.oracle.truffle.api.nodes.Node,com.oracle.truffle.api.frame.MaterializedFrame) throws java.io.IOException
meth protected java.lang.Object findExportedSymbol(java.lang.Object,java.lang.String,boolean)
meth protected java.lang.Object getLanguageGlobal(java.lang.Object)
supr com.oracle.truffle.api.TruffleLanguage<java.lang.Object>

CLSS public com.oracle.truffle.api.ThreadSafetyTest
cons public init()
meth public void test() throws java.lang.InterruptedException
supr java.lang.Object
hcls ConstNode,OtherRewritingNode,RecursiveCallNode,RewritingNode,TestRootNode,ValueNode

CLSS public com.oracle.truffle.api.Truffle
cons public init()
 anno 0 java.lang.Deprecated()
meth public static com.oracle.truffle.api.TruffleRuntime getRuntime()
supr java.lang.Object
hfds RUNTIME

CLSS public abstract com.oracle.truffle.api.TruffleLanguage<%0 extends java.lang.Object>
cons protected init()
innr public abstract interface static !annotation Registration
innr public final static Env
meth protected abstract !varargs com.oracle.truffle.api.CallTarget parse(com.oracle.truffle.api.source.Source,com.oracle.truffle.api.nodes.Node,java.lang.String[]) throws java.io.IOException
meth protected abstract boolean isObjectOfLanguage(java.lang.Object)
meth protected abstract java.lang.Object evalInContext(com.oracle.truffle.api.source.Source,com.oracle.truffle.api.nodes.Node,com.oracle.truffle.api.frame.MaterializedFrame) throws java.io.IOException
meth protected abstract java.lang.Object findExportedSymbol({com.oracle.truffle.api.TruffleLanguage%0},java.lang.String,boolean)
meth protected abstract java.lang.Object getLanguageGlobal({com.oracle.truffle.api.TruffleLanguage%0})
meth protected abstract {com.oracle.truffle.api.TruffleLanguage%0} createContext(com.oracle.truffle.api.TruffleLanguage$Env)
meth protected boolean isInstrumentable(com.oracle.truffle.api.nodes.Node)
 anno 0 java.lang.Deprecated()
meth protected com.oracle.truffle.api.instrument.Visualizer getVisualizer()
 anno 0 java.lang.Deprecated()
meth protected com.oracle.truffle.api.instrument.WrapperNode createWrapperNode(com.oracle.truffle.api.nodes.Node)
 anno 0 java.lang.Deprecated()
meth protected final com.oracle.truffle.api.nodes.Node createFindContextNode()
meth protected final {com.oracle.truffle.api.TruffleLanguage%0} findContext(com.oracle.truffle.api.nodes.Node)
meth protected java.lang.String toString({com.oracle.truffle.api.TruffleLanguage%0},java.lang.Object)
meth protected void disposeContext({com.oracle.truffle.api.TruffleLanguage%0})
supr java.lang.Object
hfds API
hcls AccessAPI,LangCtx,LanguageImpl

CLSS public final static com.oracle.truffle.api.TruffleLanguage$Env
 outer com.oracle.truffle.api.TruffleLanguage
meth public !varargs com.oracle.truffle.api.CallTarget parse(com.oracle.truffle.api.source.Source,java.lang.String[]) throws java.io.IOException
meth public <%0 extends java.lang.Object> {%%0} lookup(java.lang.Class<{%%0}>)
meth public boolean isMimeTypeSupported(java.lang.String)
meth public com.oracle.truffle.api.instrument.Instrumenter instrumenter()
 anno 0 java.lang.Deprecated()
meth public java.io.InputStream in()
meth public java.io.OutputStream err()
meth public java.io.OutputStream out()
meth public java.lang.Object importSymbol(java.lang.String)
meth public java.util.Map<java.lang.String,java.lang.Object> getConfig()
supr java.lang.Object
hfds config,err,in,instrumenter,lang,langCtx,out,services,vm

CLSS public abstract interface static !annotation com.oracle.truffle.api.TruffleLanguage$Registration
 outer com.oracle.truffle.api.TruffleLanguage
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=SOURCE)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract java.lang.String name()
meth public abstract java.lang.String version()
meth public abstract java.lang.String[] mimeType()

CLSS public final com.oracle.truffle.api.TruffleOptions
fld public final static boolean AOT
fld public final static boolean DetailedRewriteReasons
fld public final static boolean TraceASTJSON
fld public final static boolean TraceRewrites
fld public final static com.oracle.truffle.api.nodes.NodeCost TraceRewritesFilterFromCost
fld public final static com.oracle.truffle.api.nodes.NodeCost TraceRewritesFilterToCost
fld public final static java.lang.String TraceRewritesFilterClass
supr java.lang.Object

CLSS public abstract interface com.oracle.truffle.api.TruffleRuntime
meth public abstract <%0 extends java.lang.Object> {%%0} getCapability(java.lang.Class<{%%0}>)
meth public abstract <%0 extends java.lang.Object> {%%0} iterateFrames(com.oracle.truffle.api.frame.FrameInstanceVisitor<{%%0}>)
meth public abstract boolean isProfilingEnabled()
meth public abstract com.oracle.truffle.api.Assumption createAssumption()
meth public abstract com.oracle.truffle.api.Assumption createAssumption(java.lang.String)
meth public abstract com.oracle.truffle.api.CompilerOptions createCompilerOptions()
meth public abstract com.oracle.truffle.api.RootCallTarget createCallTarget(com.oracle.truffle.api.nodes.RootNode)
meth public abstract com.oracle.truffle.api.frame.FrameInstance getCallerFrame()
meth public abstract com.oracle.truffle.api.frame.FrameInstance getCurrentFrame()
meth public abstract com.oracle.truffle.api.frame.MaterializedFrame createMaterializedFrame(java.lang.Object[])
meth public abstract com.oracle.truffle.api.frame.MaterializedFrame createMaterializedFrame(java.lang.Object[],com.oracle.truffle.api.frame.FrameDescriptor)
meth public abstract com.oracle.truffle.api.frame.VirtualFrame createVirtualFrame(java.lang.Object[],com.oracle.truffle.api.frame.FrameDescriptor)
meth public abstract com.oracle.truffle.api.nodes.DirectCallNode createDirectCallNode(com.oracle.truffle.api.CallTarget)
meth public abstract com.oracle.truffle.api.nodes.IndirectCallNode createIndirectCallNode()
meth public abstract com.oracle.truffle.api.nodes.LoopNode createLoopNode(com.oracle.truffle.api.nodes.RepeatingNode)
meth public abstract java.lang.String getName()
meth public abstract java.util.Collection<com.oracle.truffle.api.RootCallTarget> getCallTargets()
 anno 0 java.lang.Deprecated()
meth public abstract void notifyTransferToInterpreter()

CLSS public abstract interface com.oracle.truffle.api.TruffleRuntimeAccess
meth public abstract com.oracle.truffle.api.TruffleRuntime getRuntime()

CLSS public com.oracle.truffle.api.TruffleRuntimeTest
cons public init()
meth public void before()
meth public void test()
meth public void testCreateCallTarget()
meth public void testGetCallTargets1()
meth public void testGetCallTargets2()
meth public void testGetCallTargets3()
meth public void verifyTheRealRuntimeIsUsedOnRealGraal()
supr java.lang.Object
hfds runtime

CLSS public abstract interface com.oracle.truffle.api.TypedObject
meth public abstract java.lang.Object getTypeIdentifier()

CLSS public abstract interface java.io.Serializable

CLSS public abstract interface !annotation java.lang.Deprecated
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[CONSTRUCTOR, FIELD, LOCAL_VARIABLE, METHOD, PACKAGE, PARAMETER, TYPE])
intf java.lang.annotation.Annotation

CLSS public java.lang.Exception
cons protected init(java.lang.String,java.lang.Throwable,boolean,boolean)
cons public init()
cons public init(java.lang.String)
cons public init(java.lang.String,java.lang.Throwable)
cons public init(java.lang.Throwable)
supr java.lang.Throwable
hfds serialVersionUID

CLSS public java.lang.Object
cons public init()
meth protected java.lang.Object clone() throws java.lang.CloneNotSupportedException
meth protected void finalize() throws java.lang.Throwable
meth public boolean equals(java.lang.Object)
meth public final java.lang.Class<?> getClass()
meth public final void notify()
meth public final void notifyAll()
meth public final void wait() throws java.lang.InterruptedException
meth public final void wait(long) throws java.lang.InterruptedException
meth public final void wait(long,int) throws java.lang.InterruptedException
meth public int hashCode()
meth public java.lang.String toString()

CLSS public java.lang.RuntimeException
cons protected init(java.lang.String,java.lang.Throwable,boolean,boolean)
cons public init()
cons public init(java.lang.String)
cons public init(java.lang.String,java.lang.Throwable)
cons public init(java.lang.Throwable)
supr java.lang.Exception
hfds serialVersionUID

CLSS public java.lang.Throwable
cons protected init(java.lang.String,java.lang.Throwable,boolean,boolean)
cons public init()
cons public init(java.lang.String)
cons public init(java.lang.String,java.lang.Throwable)
cons public init(java.lang.Throwable)
intf java.io.Serializable
meth public final java.lang.Throwable[] getSuppressed()
meth public final void addSuppressed(java.lang.Throwable)
meth public java.lang.StackTraceElement[] getStackTrace()
meth public java.lang.String getLocalizedMessage()
meth public java.lang.String getMessage()
meth public java.lang.String toString()
meth public java.lang.Throwable fillInStackTrace()
meth public java.lang.Throwable getCause()
meth public java.lang.Throwable initCause(java.lang.Throwable)
meth public void printStackTrace()
meth public void printStackTrace(java.io.PrintStream)
meth public void printStackTrace(java.io.PrintWriter)
meth public void setStackTrace(java.lang.StackTraceElement[])
supr java.lang.Object
hfds CAUSE_CAPTION,EMPTY_THROWABLE_ARRAY,NULL_CAUSE_MESSAGE,SELF_SUPPRESSION_MESSAGE,SUPPRESSED_CAPTION,SUPPRESSED_SENTINEL,UNASSIGNED_STACK,backtrace,cause,detailMessage,serialVersionUID,stackTrace,suppressedExceptions
hcls PrintStreamOrWriter,SentinelHolder,WrappedPrintStream,WrappedPrintWriter

CLSS public abstract interface java.lang.annotation.Annotation
meth public abstract boolean equals(java.lang.Object)
meth public abstract int hashCode()
meth public abstract java.lang.Class<? extends java.lang.annotation.Annotation> annotationType()
meth public abstract java.lang.String toString()

CLSS public abstract interface !annotation java.lang.annotation.Documented
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation java.lang.annotation.Retention
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE])
intf java.lang.annotation.Annotation
meth public abstract java.lang.annotation.RetentionPolicy value()

CLSS public abstract interface !annotation java.lang.annotation.Target
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE])
intf java.lang.annotation.Annotation
meth public abstract java.lang.annotation.ElementType[] value()

